---
- name: Install and set up Tomcat on remote server
  hosts: remote-server
  become: yes
  
  vars:
    tomcat_user: tomcat
    tomcat_group: tomcat
    tomcat_version: 10.0.15
    tomcat_home: /opt/tomcat
    tomcat_port: 8080
    
  tasks:
    - name: Install Java
      apt:
        name: default-jdk
        state: present
          
    - name: Install Tomcat user and group
      group:
        name: "{{ tomcat_group }}"
        state: present
          
      user:
        name: "{{ tomcat_user }}"
        group: "{{ tomcat_group }}"
        home: "{{ tomcat_home }}"
        system: yes
          
    - name: Download Tomcat
      get_url:
        url: "https://downloads.apache.org/tomcat/tomcat-{{ tomcat_version }}/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.tar.gz"
        dest: /tmp/
          
    - name: Extract Tomcat
      unarchive:
        src: /tmp/apache-tomcat-{{ tomcat_version }}.tar.gz
        dest: "{{ tomcat_home }}"
        remote_src: yes
        copy: no
        extra_opts: "--strip-components=1"
      become_user: "{{ tomcat_user }}"
          
    - name: Configure Tomcat server
      template:
        src: templates/server.xml.j2
        dest: "{{ tomcat_home }}/conf/server.xml"
      become_user: "{{ tomcat_user }}"
          
    - name: Start Tomcat
      command: "{{ tomcat_home }}/bin/startup.sh"
      become_user: "{{ tomcat_user }}"
      
    - name: Enable firewall for Tomcat
      ufw:
        rule: allow
        port: "{{ tomcat_port }}"
      
    - name: Save firewall rules
      command: ufw save
      
      
    =================================================================================
    Explanation:

The first task installs Java using the apt module.
The second task creates a user and group for Tomcat using the group and user modules.
The third task downloads Tomcat from the official website using the get_url module.
The fourth task extracts the downloaded Tomcat archive to the {{ tomcat_home }} directory using the unarchive module. It also sets the ownership of the directory to the Tomcat user.
The fifth task configures the Tomcat server by copying a server.xml file from the local templates directory to the remote {{ tomcat_home }}/conf/ directory. The template file can contain any additional configuration required for the Tomcat server.
The sixth task starts Tomcat using the command module, with the Tomcat user as the become user.
The seventh task enables a firewall rule to allow traffic on the Tomcat port using the ufw module.
The eighth task saves the firewall rules using the command module.
To use this playbook, you need to create a template file for the server.xml configuration and save it in a templates directory. The template file can contain any additional configuration required for the Tomcat server. Here's an example server.xml.j2 template file:

<Server port="8005" shutdown="SHUTDOWN">
  <Service name="Catalina">
    <Connector port="{{ tomcat_port }}" protocol="HTTP/1.1"
               connectionTimeout="20000"
              
